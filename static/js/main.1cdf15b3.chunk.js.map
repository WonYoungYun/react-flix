{"version":3,"sources":["assets/noPosterSmall.png","components/Header.js","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","containers/Home/HomePresenter.js","config/index.js","api/index.js","containers/Home/index.js","containers/Home/HomeContainer.js","containers/Search/SearchPresenter.js","containers/Search/index.js","containers/Search/SearchContainer.js","containers/TV/TVPresenter.js","containers/TV/index.js","containers/TV/TVContainer.js","containers/Detail/DetailPresenter.js","containers/Detail/index.js","containers/Detail/DetailContainer.js","components/NotFound.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","HLink","span","_templateObject5","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","isLoading","keyframes","Loader_templateObject","Loader_templateObject2","Lds","Loader_templateObject3","Loading","Loader_templateObject4","Loader","Loader_Container","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","Poster_templateObject4","Year","Poster_templateObject5","Info","_templateObject6","ImageContainer","_templateObject7","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","concat","Poster_Container","Poster_Title","substring","require","Array","Math","round","fill","map","e","idx","role","aria-label","key","HomePresenter_templateObject","Button","button","HomePresenter_templateObject2","HomePresenter","nowPlaying","popular","upcoming","getNextPage","getNext","loading","error","Fragment","Helmet_default","HomePresenter_Container","length","components_Section","movie","components_Poster","poster_path","vote_average","release_date","onClick","disabled","components_Message","cfg","api","axios","create","baseURL","params","api_key","language","movieApi","get","pageNum","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","_callee","_this$state","_ref2","nextPage","regenerator_default","wrap","_context","prev","next","_this","setState","sent","data","results","t0","finish","stop","this","_this$state2","Home_HomePresenter","Component","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","showResults","searchTerm","resultTerm","handleSubmit","updateTerm","inputRef","SearchPresenter_Container","onSubmit","placeholder","value","onChange","ref","show","name","first_air_date","SearchContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","preventDefault","trim","searchByTerm","target","asyncToGenerator","mark","_ref3","split","join","inputFocus","React","createRef","focus","Search_SearchPresenter","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","TVContainer","TV_TVPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h2","DetailPresenter_templateObject6","ItemContainer","DetailPresenter_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","Trailer","_templateObject11","Production","_templateObject12","Company","_templateObject13","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","href","homepage","genres","genre","overview","videos","width","height","src","frameBorder","allow","allowFullScreen","production_companies","company","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","NotFound","Router","HashRouter","components_Header","Switch","Route","path","exact","component","Home","Search","TV","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1cdf15b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Header = styled.header`\r\n    color:#fff;\r\n    position:fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items:center;\r\n    padding: 0 10px;\r\n    background-color:rgba(20,20,20);\r\n    box-shadow: 0 1px 5px 2px rgba(0,0,0,.8);\r\n    z-index:9999;\r\n\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n    &:hover{\r\n    }\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:80px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom .5s ease-in-out;\r\n    /* &:not(:last-child){\r\n        margin-right: 10px;\r\n    } */\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst HLink = styled.span`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n\r\n        <List>\r\n            <Item current={pathname === '/'}>\r\n                {pathname === '/' ? <HLink>영화</HLink> : <SLink to=\"/\">영화</SLink>}\r\n            </Item>\r\n            <Item current={pathname === '/show'}>\r\n                {pathname === '/show' ? <HLink>프로그램</HLink> : <SLink to=\"/show\">프로그램</SLink>}\r\n            </Item>\r\n            <Item current={pathname === '/search'}>\r\n                {pathname === '/search' ? <HLink>검색</HLink> : <SLink to=\"/search\">검색</SLink>}\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n))   ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n    margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    \r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n`;\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n\r\nconst isLoading = keyframes`\r\n  0% {\r\n    top: 6px;\r\n    height: 51px;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 19px;\r\n    height: 26px;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100%;\r\n    display:flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst Lds = styled.div`\r\n    display: inline-block;\r\n  position: absolute;\r\n  left: 6px;\r\n  width: 13px;\r\n  background: #3498db;\r\n  animation: ${isLoading} 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\r\n  &:nth-child(1){\r\n      left:6px;\r\n      animation-delay: -0.24s;\r\n  }\r\n  &:nth-child(2){\r\n    left: 26px;\r\n    animation-delay: -0.12s;\r\n  }\r\n  &:nth-child(3){\r\n      left:45px;\r\n      animation-delay: 0s;\r\n  }\r\n`;\r\n\r\n\r\nconst Loading = styled.div`\r\n  display: inline-block;\r\n  position: absolute;\r\n  width: 64px;\r\n  height: 64px;\r\n  top: 47%;\r\n  left: 47%;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport default () => (\r\n    <Container>\r\n        {/* <Container><span role=\"img\" aria-label=\"로딩중\">⏳</span></Container> */}\r\n\r\n        <Loading>\r\n            <Lds />\r\n            <Lds />\r\n            <Lds />\r\n        </Loading>\r\n    </Container>\r\n)\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n`;\r\n\r\n\r\nconst Text = styled.span`\r\n    color:${props => props.color};\r\n    font-weight:600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    height: 180px;\r\n    background-image: url(${props => props.bgUrl});\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position:center center;\r\n    transition: opacity .1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    position:absolute;\r\n    bottom:8px;\r\n    right:5px;\r\n    opacity: 0;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display:block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size:12px;\r\n    color:rgba(255,255,255, .8);\r\n`;\r\n\r\nconst Info = styled.div`\r\n    position:absolute;\r\n    top:40%;\r\n    width:100%;\r\n    padding: 0 8px;\r\n    text-align:center;\r\n    opacity:0;\r\n    z-index:1;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    position:relative;\r\n    margin-bottom: 5px;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity: 1;\r\n        }\r\n        ${Info}{\r\n            opacity:1;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Info>\r\n                    <Title>{title}</Title>\r\n                    <Year>{year.substring(0, 4)}</Year>\r\n                </Info>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")} />\r\n                {rating > 0 &&\r\n                    <Rating>\r\n                        {Array(Math.round(rating / 2)).fill(1).map((e, idx) =>\r\n                            <span role=\"img\" aria-label=\"평점\" key={idx}>⭐</span>\r\n                        )}\r\n                        {\" \"}\r\n                        {rating}/10\r\n                </Rating>\r\n                }\r\n            </ImageContainer>\r\n\r\n\r\n        </Container>\r\n    </Link>\r\n)\r\n\r\n\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from '../../components/Section';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport Poster from '../../components/Poster';\r\n\r\nconst Container = styled.div`\r\n     padding: 20px;\r\n     \r\n\r\n`;\r\n\r\nconst Button = styled.button`\r\n    all:unset;\r\n    width:100%;\r\n    height:40px;\r\n    text-align:center;\r\n    font-size: 12px;\r\n    font-weight:600;\r\n    background-color: #222;\r\n    cursor:pointer;\r\n    transition: background-color .1s linear;\r\n    &:hover{\r\n        background-color:#333;\r\n    }\r\n`;\r\n\r\nconst HomePresenter = ({\r\n    nowPlaying,\r\n    popular,\r\n    upcoming,\r\n    getNextPage,\r\n    getNext,\r\n    loading,\r\n    error\r\n}) => <>\r\n        <Helmet>\r\n            <title>reactflix | 영화</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> : (\r\n            <Container>\r\n                {nowPlaying && nowPlaying.length > 0 &&\r\n                    <Section title=\"현재상영영화\" >\r\n                        {nowPlaying.map(movie =>\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true} />)}\r\n                    </Section>\r\n                }\r\n                {upcoming && upcoming.length > 0 &&\r\n                    <Section title=\"개봉예정영화\" >\r\n                        {upcoming.map(movie =>\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true} />)}\r\n                    </Section>\r\n                }\r\n                {popular && popular.length > 0 &&\r\n                    <Section title=\"인기있는 영화\" >\r\n                        {popular.map(movie =>\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true} />)}\r\n                    </Section>\r\n                }\r\n                <Button onClick={getNextPage} disabled={getNext}>더보기</Button>\r\n                {/* 역대영화 페이징 가능하게만들기 */}\r\n                {error && <Message text={error} color=\"#e74c3c\" />}\r\n            </Container>\r\n        )}\r\n    </>\r\n\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    getNext: PropTypes.bool.isRequired,\r\n    getNextPage: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter","\r\nconst cfg = {\r\n    key: \"9936a1fc62e6ee5f6c26c00f7076bd5f\"\r\n}\r\n\r\nexport default cfg\r\n\r\n\r\n","import axios from 'axios';\r\nimport cfg from '../config'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    params: {\r\n        \"api_key\": cfg.key,\r\n        // language: \"en-US\",\r\n        language: \"ko\"\r\n    }\r\n})\r\n\r\n//상대경로를 사용해야하며 절대경로를 사용하게 되면 axios.create의 base가 덮어쓰여진다.\r\nconst movieApi = {\r\n    nowPlaying: () => api.get('movie/now_playing'),\r\n    upcoming: () => api.get('movie/upcoming'),\r\n    popular: (pageNum) => api.get(`movie/popular?page=${pageNum}`),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term => api.get('search/movie', {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n\r\n        }\r\n    })\r\n}\r\n\r\nconst tvApi = {\r\n    topRated: () => api.get('tv/top_rated'),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get('tv/airing_today'),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term => api.get('search/tv', {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n\r\n        }\r\n    })\r\n}\r\n\r\nexport { tvApi, movieApi }","import HomeContainer from './HomeContainer'\r\n\r\nexport default HomeContainer","import React, { Component } from 'react';\r\nimport HomePresenter from './HomePresenter'\r\nimport { movieApi } from '../../api'\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        pageNum: 1,\r\n        getNext: false,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            const { data: { results: nowPlaying } } = await movieApi.nowPlaying();\r\n            const { data: { results: upcoming } } = await movieApi.upcoming();\r\n\r\n            const { data: { results: popular } } = await movieApi.popular(1);\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular,\r\n            })\r\n\r\n        } catch {\r\n            this.setState({\r\n                error: \"영화정보를 가져올 수 없습니다.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    };\r\n\r\n    getNextPage = async () => {\r\n        const { pageNum, popular } = this.state\r\n        try {\r\n            this.setState({\r\n                getNext: true,\r\n            })\r\n            const { data: { results: nextPage } } = await movieApi.popular(pageNum + 1)\r\n\r\n\r\n            this.setState({\r\n                pageNum: pageNum + 1,\r\n                popular: popular.concat(nextPage)\r\n            })\r\n        }\r\n        catch{\r\n            this.setState({\r\n                error: \"영화정보를 가져올 수 없습니다.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                getNext: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading, getNext } = this.state;\r\n        return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} getNext={getNext} error={error} loading={loading} getNextPage={this.getNextPage} />\r\n    };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from '../../components/Loader';\r\nimport Section from '../../components/Section';\r\nimport Message from '../../components/Message';\r\nimport Poster from '../../components/Poster';\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom:50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    showResults,\r\n    searchTerm,\r\n    resultTerm,\r\n    handleSubmit,\r\n    updateTerm,\r\n    loading,\r\n    inputRef,\r\n    error\r\n}) =>\r\n    <Container>\r\n        <Helmet>\r\n            <title>reactflix | 검색</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input\r\n                placeholder=\"검색방법 : 셜록 = sherlock\"\r\n                value={searchTerm}\r\n                onChange={updateTerm}\r\n                ref={inputRef}\r\n            ></Input>\r\n        </Form>\r\n        {loading ? (<Loader />) :\r\n            (<>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"영화\">\r\n                        {movieResults.map(movie =>\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true} />)}\r\n                    </Section>\r\n                )}\r\n                {showResults && showResults.length > 0 && (\r\n                    <Section title=\"프로그램\">\r\n                        {showResults.map(show =>\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                title={show.name}\r\n                                imageUrl={show.poster_path}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date}\r\n                                isMovie={false} />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n            </>\r\n            )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {showResults &&\r\n            movieResults &&\r\n            showResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n                <Message text={`검색결과가 없습니다. ${resultTerm}`} color=\"#95a5a6\" />\r\n            )}\r\n    </Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    showResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    resultTerm: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from './SearchContainer'\r\n\r\nexport default SearchContainer","import React, { Component } from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { movieApi, tvApi } from '../../api';\r\n\r\n\r\nexport default class extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputFocus = React.createRef();\r\n    }\r\n    state = {\r\n        movieResults: null,\r\n        showResults: null,\r\n        searchTerm: \"\",\r\n        resultTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.inputFocus.current.focus();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm.trim()) {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = e => {\r\n        const { target: { value } } = e;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        let term = searchTerm\r\n        term = term.split(' ').join('-')\r\n        this.setState({ loading: true })\r\n        try {\r\n            const { data: { results: movieResults } } = await movieApi.search(term);\r\n            const { data: { results: showResults } } = await tvApi.search(term);\r\n\r\n            this.setState({\r\n                movieResults,\r\n                showResults,\r\n                resultTerm: searchTerm\r\n            });\r\n        } catch  {\r\n            this.setState({ error: \"결과를 찾을 수 없습니다.\" })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, showResults, searchTerm, resultTerm, loading, error } = this.state;\r\n        return <SearchPresenter\r\n            movieResults={movieResults}\r\n            showResults={showResults}\r\n            searchTerm={searchTerm}\r\n            resultTerm={resultTerm}\r\n            loading={loading}\r\n            error={error}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            inputRef={this.inputFocus} />\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from '../../components/Section';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport Poster from '../../components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding:20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => <>\r\n    <Helmet>\r\n        <title>reactflix | 프로그램</title>\r\n    </Helmet>\r\n    {loading ? <Loader /> : (\r\n        <Container>\r\n            {topRated && topRated.length > 0 && (\r\n                <Section title=\"현재 최고 인기\">{topRated.map(show => <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date}\r\n                    isMovie={false} />\r\n                )}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"인기있는 프로그램\">{popular.map(show => <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date}\r\n                    isMovie={false} />\r\n                )}\r\n                </Section>\r\n            )}\r\n            {airingToday && airingToday.length > 0 && (\r\n                <Section title=\"오늘의 프로그램\">{airingToday.map(show => <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date}\r\n                    isMovie={false} />\r\n                )}\r\n                </Section>\r\n            )}\r\n            {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Container>\r\n    )};\r\n</>\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter","import TVContainer from './TVContainer'\r\n\r\nexport default TVContainer","import React, { Component } from 'react';\r\nimport TVPresenter from './TVPresenter'\r\nimport { tvApi } from '../../api'\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null,\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n\r\n        } catch {\r\n            this.setState({\r\n                error: \"프로그램을 찾을 수 없어요!\"\r\n            })\r\n\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state;\r\n        return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} loading={loading} error={error} />\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Helmet from 'react-helmet';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height:calc(100vh - 50px);\r\n    position: relative;\r\n    padding:50px;\r\n`;\r\n\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position:center center;\r\n    background-attachment: fixed;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: .5;\r\n    z-index:0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width:100%;\r\n    height:100%;\r\n    position:relative;\r\n    z-index:1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width:30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position:center center;\r\n    background-size: cover;\r\n    height:100%;\r\n    border-radius: 5px;\r\n\r\n`;\r\n\r\nconst Data = styled.div`\r\n    position:relative;\r\n    width: 70%;\r\n    width:600px;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 32px;\r\n    font-weight:600;\r\n\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    margin-bottom:20px;\r\n    font-size: 12px;\r\n    opacity: .7;\r\n    line-height: 1.5;\r\n\r\n\r\n`;\r\nconst Trailer = styled.div``;\r\n\r\nconst Production = styled.div`\r\n    position:absolute;\r\n    left:0;\r\n    bottom:10px;\r\n    width:100%;\r\n    font-size: 14px;\r\n    \r\n`;\r\n\r\nconst Company = styled.div`\r\n    width:100%;\r\n    margin-bottom:10px;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Loading...</title>\r\n        </Helmet>\r\n        {loading ? (<Loader />) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>{result.title ? result.title : result.name}</title>\r\n                </Helmet>\r\n                {result.backdrop_path && <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />}\r\n                <Content>\r\n                    <Cover bgImage={result.poster_path\r\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                        : require('../../assets/noPosterSmall.png')} />\r\n                    <Data>\r\n                        <Title>\r\n                            {result.title ? result.title : result.name}\r\n                        </Title>\r\n                        <ItemContainer>\r\n                            <Item>\r\n                                {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\r\n                            </Item>\r\n                            <Divider>·</Divider>\r\n                            <Item>\r\n                                {result.runtime ? result.runtime : result.episode_run_time[0]} 분\r\n                        </Item>\r\n                            <Divider>·</Divider>\r\n                            <Item>\r\n                                <a href={result.homepage} >홈페이지</a>\r\n                            </Item>\r\n                            <Divider>·</Divider>\r\n                            <Item>\r\n                                {result.genres && result.genres.map((genre, idx) => idx === result.genres.length - 1 ? genre.name : `${genre.name} /`)}\r\n                            </Item>\r\n                            <Divider>·</Divider>\r\n                            <Item>\r\n                                {Array(Math.round(result.vote_average / 2)).fill(1).map((e, idx) =>\r\n                                    <span role=\"img\" aria-label=\"평점\" key={idx}>⭐</span>\r\n                                )}\r\n                                {\" \"}\r\n                                {result.vote_average}/10\r\n                        </Item>\r\n                        </ItemContainer>\r\n                        <Overview>\r\n                            {result.overview}\r\n                        </Overview>\r\n\r\n                        <Trailer>\r\n                            {result.videos &&\r\n                                result.videos.results.length > 0\r\n                                &&\r\n                                <iframe title={result.id} width=\"533\" height=\"300\" src={`https://www.youtube.com/embed/${result.videos.results[0].key}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>}\r\n                        </Trailer>\r\n                        <Production>\r\n                            {result.production_companies.map(company => <Company key={company.name}>{company.name}</Company>)}\r\n                        </Production>\r\n                    </Data>\r\n\r\n                </Content>\r\n                {error && <Message text={error} color=\"#e74c3c\" />}\r\n            </Container>\r\n\r\n        )}\r\n    </>\r\n);\r\n\r\n\r\n\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter","import DetailContainer from './DetailContainer'\r\n\r\nexport default DetailContainer","import React, { Component } from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { movieApi, tvApi } from '../../api'\r\n\r\nexport default class extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { location: { pathname } } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const { match: { params: { id } }, history: { push }, } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            //숫자(id)가 아니기 떄문에 history의 push를 이용하여 라우터로 넘김\r\n            return push(\"/notfound\");\r\n        }\r\n        try {\r\n            const { data: result } = isMovie ? await movieApi.movieDetail(id) : await tvApi.showDetail(id)\r\n            this.setState({\r\n                result\r\n            })\r\n        } catch{\r\n            this.setState({\r\n                error: \"찾을 수 없습니다!\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return <DetailPresenter result={result} error={error} loading={loading} />\r\n    }\r\n}","export default () => \"NotFound\";","import React from 'react';\r\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Home from '../containers/Home';\r\nimport Search from '../containers/Search';\r\nimport TV from '../containers/TV';\r\nimport Detail from '../containers/Detail';\r\nimport NotFound from './NotFound';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/search\" exact component={Search} />\r\n                <Route path=\"/show\" exact component={TV} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Route path=\"/notfound\" component={NotFound} />\r\n                <Redirect from='*' to=\"/notfound\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n)\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset'\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:#fff;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from './Router'\nimport GlobalStyles from './GlobalStyles'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}